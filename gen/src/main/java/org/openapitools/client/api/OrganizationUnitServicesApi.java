/*
 * organization root
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import java.math.BigDecimal;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class OrganizationUnitServicesApi {
    private ApiClient localVarApiClient;

    public OrganizationUnitServicesApi() {
        this(Configuration.getDefaultApiClient());
    }

    public OrganizationUnitServicesApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    /**
     * Build call for organizationUnitServicesGet
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> get list </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call organizationUnitServicesGetCall(final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/organization-unit-services";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call organizationUnitServicesGetValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = organizationUnitServicesGetCall(_callback);
        return localVarCall;

    }

    /**
     * get list
     * ###### API endpoint to get the list of organization unit types A successful request response will show 200 HTTP status code
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> get list </td><td>  -  </td></tr>
     </table>
     */
    public void organizationUnitServicesGet() throws ApiException {
        organizationUnitServicesGetWithHttpInfo();
    }

    /**
     * get list
     * ###### API endpoint to get the list of organization unit types A successful request response will show 200 HTTP status code
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> get list </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> organizationUnitServicesGetWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = organizationUnitServicesGetValidateBeforeCall(null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * get list (asynchronously)
     * ###### API endpoint to get the list of organization unit types A successful request response will show 200 HTTP status code
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> get list </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call organizationUnitServicesGetAsync(final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = organizationUnitServicesGetValidateBeforeCall(_callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for organizationUnitServicesOrganizationUnitServiceIdDelete
     * @param organizationUnitServiceId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> delete </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call organizationUnitServicesOrganizationUnitServiceIdDeleteCall(Integer organizationUnitServiceId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/organization-unit-services/{organizationUnitServiceId}"
            .replaceAll("\\{" + "organizationUnitServiceId" + "\\}", localVarApiClient.escapeString(organizationUnitServiceId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call organizationUnitServicesOrganizationUnitServiceIdDeleteValidateBeforeCall(Integer organizationUnitServiceId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'organizationUnitServiceId' is set
        if (organizationUnitServiceId == null) {
            throw new ApiException("Missing the required parameter 'organizationUnitServiceId' when calling organizationUnitServicesOrganizationUnitServiceIdDelete(Async)");
        }
        

        okhttp3.Call localVarCall = organizationUnitServicesOrganizationUnitServiceIdDeleteCall(organizationUnitServiceId, _callback);
        return localVarCall;

    }

    /**
     * delete
     * ###### API endpoint to delete an organization unit type  A successful request response will show 200 HTTP status code
     * @param organizationUnitServiceId  (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> delete </td><td>  -  </td></tr>
     </table>
     */
    public void organizationUnitServicesOrganizationUnitServiceIdDelete(Integer organizationUnitServiceId) throws ApiException {
        organizationUnitServicesOrganizationUnitServiceIdDeleteWithHttpInfo(organizationUnitServiceId);
    }

    /**
     * delete
     * ###### API endpoint to delete an organization unit type  A successful request response will show 200 HTTP status code
     * @param organizationUnitServiceId  (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> delete </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> organizationUnitServicesOrganizationUnitServiceIdDeleteWithHttpInfo(Integer organizationUnitServiceId) throws ApiException {
        okhttp3.Call localVarCall = organizationUnitServicesOrganizationUnitServiceIdDeleteValidateBeforeCall(organizationUnitServiceId, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * delete (asynchronously)
     * ###### API endpoint to delete an organization unit type  A successful request response will show 200 HTTP status code
     * @param organizationUnitServiceId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> delete </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call organizationUnitServicesOrganizationUnitServiceIdDeleteAsync(Integer organizationUnitServiceId, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = organizationUnitServicesOrganizationUnitServiceIdDeleteValidateBeforeCall(organizationUnitServiceId, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for organizationUnitServicesOrganizationUnitServiceIdGet
     * @param organizationUnitServiceId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> get one </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call organizationUnitServicesOrganizationUnitServiceIdGetCall(Integer organizationUnitServiceId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/organization-unit-services/{organizationUnitServiceId}"
            .replaceAll("\\{" + "organizationUnitServiceId" + "\\}", localVarApiClient.escapeString(organizationUnitServiceId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call organizationUnitServicesOrganizationUnitServiceIdGetValidateBeforeCall(Integer organizationUnitServiceId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'organizationUnitServiceId' is set
        if (organizationUnitServiceId == null) {
            throw new ApiException("Missing the required parameter 'organizationUnitServiceId' when calling organizationUnitServicesOrganizationUnitServiceIdGet(Async)");
        }
        

        okhttp3.Call localVarCall = organizationUnitServicesOrganizationUnitServiceIdGetCall(organizationUnitServiceId, _callback);
        return localVarCall;

    }

    /**
     * get one
     * ###### API endpoint to get a organization unit type  A successful request response will show 200 HTTP status code
     * @param organizationUnitServiceId  (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> get one </td><td>  -  </td></tr>
     </table>
     */
    public void organizationUnitServicesOrganizationUnitServiceIdGet(Integer organizationUnitServiceId) throws ApiException {
        organizationUnitServicesOrganizationUnitServiceIdGetWithHttpInfo(organizationUnitServiceId);
    }

    /**
     * get one
     * ###### API endpoint to get a organization unit type  A successful request response will show 200 HTTP status code
     * @param organizationUnitServiceId  (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> get one </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> organizationUnitServicesOrganizationUnitServiceIdGetWithHttpInfo(Integer organizationUnitServiceId) throws ApiException {
        okhttp3.Call localVarCall = organizationUnitServicesOrganizationUnitServiceIdGetValidateBeforeCall(organizationUnitServiceId, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * get one (asynchronously)
     * ###### API endpoint to get a organization unit type  A successful request response will show 200 HTTP status code
     * @param organizationUnitServiceId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> get one </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call organizationUnitServicesOrganizationUnitServiceIdGetAsync(Integer organizationUnitServiceId, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = organizationUnitServicesOrganizationUnitServiceIdGetValidateBeforeCall(organizationUnitServiceId, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for organizationUnitServicesOrganizationUnitServiceIdPut
     * @param organizationUnitServiceId  (required)
     * @param organizationId  (required)
     * @param organizationUnitId  (required)
     * @param serviceId0  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> update </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call organizationUnitServicesOrganizationUnitServiceIdPutCall(Integer organizationUnitServiceId, Integer organizationId, Integer organizationUnitId, BigDecimal serviceId0, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/organization-unit-services/{organizationUnitServiceId}"
            .replaceAll("\\{" + "organizationUnitServiceId" + "\\}", localVarApiClient.escapeString(organizationUnitServiceId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (organizationId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("organization_id", organizationId));
        }

        if (organizationUnitId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("organization_unit_id", organizationUnitId));
        }

        if (serviceId0 != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("service_id[0]", serviceId0));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call organizationUnitServicesOrganizationUnitServiceIdPutValidateBeforeCall(Integer organizationUnitServiceId, Integer organizationId, Integer organizationUnitId, BigDecimal serviceId0, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'organizationUnitServiceId' is set
        if (organizationUnitServiceId == null) {
            throw new ApiException("Missing the required parameter 'organizationUnitServiceId' when calling organizationUnitServicesOrganizationUnitServiceIdPut(Async)");
        }
        
        // verify the required parameter 'organizationId' is set
        if (organizationId == null) {
            throw new ApiException("Missing the required parameter 'organizationId' when calling organizationUnitServicesOrganizationUnitServiceIdPut(Async)");
        }
        
        // verify the required parameter 'organizationUnitId' is set
        if (organizationUnitId == null) {
            throw new ApiException("Missing the required parameter 'organizationUnitId' when calling organizationUnitServicesOrganizationUnitServiceIdPut(Async)");
        }
        
        // verify the required parameter 'serviceId0' is set
        if (serviceId0 == null) {
            throw new ApiException("Missing the required parameter 'serviceId0' when calling organizationUnitServicesOrganizationUnitServiceIdPut(Async)");
        }
        

        okhttp3.Call localVarCall = organizationUnitServicesOrganizationUnitServiceIdPutCall(organizationUnitServiceId, organizationId, organizationUnitId, serviceId0, _callback);
        return localVarCall;

    }

    /**
     * update
     * ###### API endpoint to update an existing organization unit types   A successful request response will show 201 HTTP status code
     * @param organizationUnitServiceId  (required)
     * @param organizationId  (required)
     * @param organizationUnitId  (required)
     * @param serviceId0  (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> update </td><td>  -  </td></tr>
     </table>
     */
    public void organizationUnitServicesOrganizationUnitServiceIdPut(Integer organizationUnitServiceId, Integer organizationId, Integer organizationUnitId, BigDecimal serviceId0) throws ApiException {
        organizationUnitServicesOrganizationUnitServiceIdPutWithHttpInfo(organizationUnitServiceId, organizationId, organizationUnitId, serviceId0);
    }

    /**
     * update
     * ###### API endpoint to update an existing organization unit types   A successful request response will show 201 HTTP status code
     * @param organizationUnitServiceId  (required)
     * @param organizationId  (required)
     * @param organizationUnitId  (required)
     * @param serviceId0  (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> update </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> organizationUnitServicesOrganizationUnitServiceIdPutWithHttpInfo(Integer organizationUnitServiceId, Integer organizationId, Integer organizationUnitId, BigDecimal serviceId0) throws ApiException {
        okhttp3.Call localVarCall = organizationUnitServicesOrganizationUnitServiceIdPutValidateBeforeCall(organizationUnitServiceId, organizationId, organizationUnitId, serviceId0, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * update (asynchronously)
     * ###### API endpoint to update an existing organization unit types   A successful request response will show 201 HTTP status code
     * @param organizationUnitServiceId  (required)
     * @param organizationId  (required)
     * @param organizationUnitId  (required)
     * @param serviceId0  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> update </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call organizationUnitServicesOrganizationUnitServiceIdPutAsync(Integer organizationUnitServiceId, Integer organizationId, Integer organizationUnitId, BigDecimal serviceId0, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = organizationUnitServicesOrganizationUnitServiceIdPutValidateBeforeCall(organizationUnitServiceId, organizationId, organizationUnitId, serviceId0, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for organizationUnitServicesPost
     * @param organizationId  (required)
     * @param organizationUnitId  (required)
     * @param serviceId0  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> create </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call organizationUnitServicesPostCall(Integer organizationId, Integer organizationUnitId, BigDecimal serviceId0, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/organization-unit-services";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (organizationId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("organization_id", organizationId));
        }

        if (organizationUnitId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("organization_unit_id", organizationUnitId));
        }

        if (serviceId0 != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("service_id[0]", serviceId0));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call organizationUnitServicesPostValidateBeforeCall(Integer organizationId, Integer organizationUnitId, BigDecimal serviceId0, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'organizationId' is set
        if (organizationId == null) {
            throw new ApiException("Missing the required parameter 'organizationId' when calling organizationUnitServicesPost(Async)");
        }
        
        // verify the required parameter 'organizationUnitId' is set
        if (organizationUnitId == null) {
            throw new ApiException("Missing the required parameter 'organizationUnitId' when calling organizationUnitServicesPost(Async)");
        }
        
        // verify the required parameter 'serviceId0' is set
        if (serviceId0 == null) {
            throw new ApiException("Missing the required parameter 'serviceId0' when calling organizationUnitServicesPost(Async)");
        }
        

        okhttp3.Call localVarCall = organizationUnitServicesPostCall(organizationId, organizationUnitId, serviceId0, _callback);
        return localVarCall;

    }

    /**
     * create
     * ###### API endpoint to create a organization unit types  A successful request response will show 201 HTTP status code
     * @param organizationId  (required)
     * @param organizationUnitId  (required)
     * @param serviceId0  (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> create </td><td>  -  </td></tr>
     </table>
     */
    public void organizationUnitServicesPost(Integer organizationId, Integer organizationUnitId, BigDecimal serviceId0) throws ApiException {
        organizationUnitServicesPostWithHttpInfo(organizationId, organizationUnitId, serviceId0);
    }

    /**
     * create
     * ###### API endpoint to create a organization unit types  A successful request response will show 201 HTTP status code
     * @param organizationId  (required)
     * @param organizationUnitId  (required)
     * @param serviceId0  (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> create </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> organizationUnitServicesPostWithHttpInfo(Integer organizationId, Integer organizationUnitId, BigDecimal serviceId0) throws ApiException {
        okhttp3.Call localVarCall = organizationUnitServicesPostValidateBeforeCall(organizationId, organizationUnitId, serviceId0, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * create (asynchronously)
     * ###### API endpoint to create a organization unit types  A successful request response will show 201 HTTP status code
     * @param organizationId  (required)
     * @param organizationUnitId  (required)
     * @param serviceId0  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  -  </td></tr>
        <tr><td> 201 </td><td> create </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call organizationUnitServicesPostAsync(Integer organizationId, Integer organizationUnitId, BigDecimal serviceId0, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = organizationUnitServicesPostValidateBeforeCall(organizationId, organizationUnitId, serviceId0, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
}
