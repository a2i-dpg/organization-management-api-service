/*
 * organization root
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OrganizationUnitsApi
 */
@Ignore
public class OrganizationUnitsApiTest {

    private final OrganizationUnitsApi api = new OrganizationUnitsApi();

    
    /**
     * get list
     *
     * ###### API endpoint to get the list of organization Units  A successful request response will show 200 HTTP status code
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void organizationUnitsGetTest() throws ApiException {
        api.organizationUnitsGet();

        // TODO: test validations
    }
    
    /**
     * delete
     *
     * ###### API endpoint to get a specified Organization  Unit  A successful request response will show 200 HTTP status code
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void organizationUnitsOrganizationUnitIdDeleteTest() throws ApiException {
        Integer organizationUnitId = null;
        api.organizationUnitsOrganizationUnitIdDelete(organizationUnitId);

        // TODO: test validations
    }
    
    /**
     * get one
     *
     * ###### API endpoint to get a specified Organization  Unit  A successful request response will show 200 HTTP status code
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void organizationUnitsOrganizationUnitIdGetTest() throws ApiException {
        Integer organizationUnitId = null;
        api.organizationUnitsOrganizationUnitIdGet(organizationUnitId);

        // TODO: test validations
    }
    
    /**
     * get one
     *
     * ###### API endpoint to get a specified Organization  Unit  A successful request response will show 200 HTTP status code
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void organizationUnitsOrganizationUnitIdPutTest() throws ApiException {
        Integer organizationUnitId = null;
        String titleEn = null;
        String titleBn = null;
        Integer organizationId = null;
        Integer organizationUnitTypeId = null;
        Integer employeeSize = null;
        Integer locDivisionId = null;
        Integer locDistrictId = null;
        Integer locUpazilaId = null;
        String address = null;
        Integer mobile = null;
        String email = null;
        Integer faxNo = null;
        String contactPersonName = null;
        Integer contactPersonMobile = null;
        String contactPersonEmail = null;
        String contactPersonDesignation = null;
        api.organizationUnitsOrganizationUnitIdPut(organizationUnitId, titleEn, titleBn, organizationId, organizationUnitTypeId, employeeSize, locDivisionId, locDistrictId, locUpazilaId, address, mobile, email, faxNo, contactPersonName, contactPersonMobile, contactPersonEmail, contactPersonDesignation);

        // TODO: test validations
    }
    
    /**
     * create
     *
     * ###### API endpoint to get the list of organization Units  A successful request response will show 200 HTTP status code
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void organizationUnitsPostTest() throws ApiException {
        String titleEn = null;
        String titleBn = null;
        Integer organizationId = null;
        Integer organizationUnitTypeId = null;
        Integer employeeSize = null;
        Integer locDivisionId = null;
        Integer locDistrictId = null;
        Integer locUpazilaId = null;
        String address = null;
        Integer mobile = null;
        String email = null;
        Integer faxNo = null;
        String contactPersonName = null;
        Integer contactPersonMobile = null;
        String contactPersonEmail = null;
        String contactPersonDesignation = null;
        api.organizationUnitsPost(titleEn, titleBn, organizationId, organizationUnitTypeId, employeeSize, locDivisionId, locDistrictId, locUpazilaId, address, mobile, email, faxNo, contactPersonName, contactPersonMobile, contactPersonEmail, contactPersonDesignation);

        // TODO: test validations
    }
    
}
