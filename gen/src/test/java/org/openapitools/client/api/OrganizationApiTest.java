/*
 * organization root
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OrganizationApi
 */
@Ignore
public class OrganizationApiTest {

    private final OrganizationApi api = new OrganizationApi();

    
    /**
     * get list
     *
     * ###### API endpoint to get the list of organizations  A successful request response will show 200 HTTP status code
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getlist0Test() throws ApiException {
        api.getlist0();

        // TODO: test validations
    }
    
    /**
     * delete
     *
     * ###### API endpoint to get a specified organization  A successful request response will show 200 HTTP status code
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void organizationsOrganizationIdDeleteTest() throws ApiException {
        Integer organizationId = null;
        api.organizationsOrganizationIdDelete(organizationId);

        // TODO: test validations
    }
    
    /**
     * get one
     *
     * ###### API endpoint to get a specified organization  A successful request response will show 200 HTTP status code
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void organizationsOrganizationIdGetTest() throws ApiException {
        Integer organizationId = null;
        api.organizationsOrganizationIdGet(organizationId);

        // TODO: test validations
    }
    
    /**
     * update
     *
     * ###### API endpoint to get a specified organization  A successful request response will show 200 HTTP status code
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void organizationsOrganizationIdPutTest() throws ApiException {
        Integer organizationId = null;
        String titleEn = null;
        String titleBn = null;
        Integer organizationTypeId = null;
        Integer locDivisionId = null;
        Integer locDistrictId = null;
        Integer locUpazilaId = null;
        String address = null;
        Integer mobile = null;
        String email = null;
        Integer faxNo = null;
        String contactPersonName = null;
        Integer contactPersonMobile = null;
        String contactPersonEmail = null;
        String contactPersonDesignation = null;
        String description = null;
        String logo = null;
        String domain = null;
        api.organizationsOrganizationIdPut(organizationId, titleEn, titleBn, organizationTypeId, locDivisionId, locDistrictId, locUpazilaId, address, mobile, email, faxNo, contactPersonName, contactPersonMobile, contactPersonEmail, contactPersonDesignation, description, logo, domain);

        // TODO: test validations
    }
    
    /**
     * create
     *
     * ###### API endpoint to get the list of organizations  A successful request response will show 200 HTTP status code
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void organizationsPostTest() throws ApiException {
        String titleEn = null;
        String titleBn = null;
        Integer organizationTypeId = null;
        Integer locDivisionId = null;
        Integer locDistrictId = null;
        Integer locUpazilaId = null;
        String address = null;
        Integer mobile = null;
        String email = null;
        Integer faxNo = null;
        String contactPersonName = null;
        Integer contactPersonMobile = null;
        String contactPersonEmail = null;
        String contactPersonDesignation = null;
        String description = null;
        String logo = null;
        String domain = null;
        api.organizationsPost(titleEn, titleBn, organizationTypeId, locDivisionId, locDistrictId, locUpazilaId, address, mobile, email, faxNo, contactPersonName, contactPersonMobile, contactPersonEmail, contactPersonDesignation, description, logo, domain);

        // TODO: test validations
    }
    
}
